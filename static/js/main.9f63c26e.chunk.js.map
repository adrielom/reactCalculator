{"version":3,"sources":["Context.js","components/Equals.js","components/Display.js","components/Item.js","components/Clear.js","components/ButtonGroup.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Context","createContext","Provider","props","useState","equation","setEquation","answer","setAnswer","value","eqtn","aswr","children","Equals","className","useContext","onClick","nString","replace","aws","eval","trim","toFixed","split","e","Display","Item","valueToJsx","isNaN","toString","Clear","ButtonGroup","Calculator","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iNAEaA,EAAUC,0BAEVC,EAAW,SAACC,GAAW,IAAD,EACFC,mBAAS,IADP,mBAC3BC,EAD2B,KACjBC,EADiB,OAENF,mBAAS,GAFH,mBAE3BG,EAF2B,KAEnBC,EAFmB,KAIlC,OACC,kBAACR,EAAQE,SAAT,CAAkBO,MAAO,CAAEC,KAAM,CAACL,EAAUC,GAAcK,KAAM,CAACJ,EAAQC,KACvEL,EAAMS,Y,2rBCNK,SAASC,OAAT,MAAuC,IAArBJ,MAAoB,KAApBA,MAAOK,UAAa,KAAbA,UAAa,YAC7BC,sDAAWf,yCAA1BU,KAD4C,YAC5CA,KAAMC,KADsC,YACtCA,KADsC,oIAEpBD,KAFoB,GAE7CL,SAF6C,SAEnCC,YAFmC,6IAGxBK,KAHwB,GAG7CJ,OAH6C,SAGrCC,UAHqC,SAKpD,OACC,kEACCQ,QAAS,mBACR,IAAIC,QAAUZ,SACZa,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACdA,QAAQ,KAAM,IACdA,QAAQ,KAAM,QAChB,IACC,IAAIC,IAAMC,KAAKH,QAAQI,QAAQC,QAAQ,GAEtCd,UADW,OAARW,IAC4B,GAArBA,IAAII,MAAM,KAAK,GAAUJ,IAAII,MAAM,KAAK,GAAKJ,IAE7C,GAEV,MAAOK,GACRhB,UAAU,KAGZM,UAAWA,WACX,oEAAIL,U,0JCzBQ,SAASgB,IAAW,IAAD,EACVV,qBAAWf,KAA1BU,EADyB,EACzBA,KAAMC,EADmB,EACnBA,KADmB,cAEDD,EAFC,GAE1BL,EAF0B,yBAGLM,EAHK,IAG1BJ,EAH0B,UAKjC,OACC,yBAAKO,UAAU,WACd,yBAAKA,UAAU,YACd,2BAAIT,IAEL,yBAAKS,UAAU,UACd,2BAAIP,KCXO,SAASmB,EAAT,GAAiD,IAAjCjB,EAAgC,EAAhCA,MAAOK,EAAyB,EAAzBA,UAAWa,EAAc,EAAdA,WACxCjB,EAASK,qBAAWf,KAApBU,KADsD,cAE9BA,EAF8B,GAEvDL,EAFuD,KAE7CC,EAF6C,KAI9D,OACC,yBACCU,QAAS,WACR,IAAIG,EACYA,EAAZQ,EAAkBtB,EAAW,MACxBuB,MAAMnB,IAA+B,MAArBA,EAAMoB,WACxBxB,EAAWI,EAEXJ,EAAWI,EAAMoB,WAAa,IAErCvB,EAAYa,IAEbL,UAAWA,GACTa,EAGD,2BACE,IADF,IAEE,kCAAa,KAJf,+BAAKlB,EAAL,M,WClBW,SAASqB,EAAT,GAAsC,IAArBrB,EAAoB,EAApBA,MAAOK,EAAa,EAAbA,UAAa,EAC5BC,qBAAWf,KAA1BU,EAD2C,EAC3CA,KAAMC,EADqC,EACrCA,KADqC,cAEnBD,EAFmB,GAElCJ,GAFkC,yBAGvBK,EAHuB,GAGpCH,GAHoC,WAKnD,OACC,yBACCQ,QAAS,WACRV,EAAY,IACZE,EAAU,IAEXM,UAAWA,GACX,2BAAIL,ICTQ,SAASsB,IACvB,OACC,yBAAKjB,UAAU,eACd,kBAACY,EAAD,CAAMZ,UAAU,OAAOL,MAAO,MAC9B,kBAACiB,EAAD,CAAMZ,UAAU,OAAOL,MAAO,IAAKkB,YAAY,IAC/C,kBAACG,EAAD,CAAOhB,UAAU,OAAOL,MAAM,MAC9B,kBAACiB,EAAD,CAAMZ,UAAU,cAAcL,MAAO,MACrC,kBAACiB,EAAD,CAAMZ,UAAU,OAAOL,MAAO,IAC9B,kBAACiB,EAAD,CAAMZ,UAAU,OAAOL,MAAO,IAC9B,kBAACiB,EAAD,CAAMZ,UAAU,OAAOL,MAAO,IAC9B,kBAACiB,EAAD,CAAMZ,UAAU,cAAcL,MAAO,MACrC,kBAACiB,EAAD,CAAMZ,UAAU,OAAOL,MAAO,IAC9B,kBAACiB,EAAD,CAAMZ,UAAU,OAAOL,MAAO,IAC9B,kBAACiB,EAAD,CAAMZ,UAAU,OAAOL,MAAO,IAC9B,kBAACiB,EAAD,CAAMZ,UAAU,cAAcL,MAAO,MACrC,kBAACiB,EAAD,CAAMZ,UAAU,OAAOL,MAAO,IAC9B,kBAACiB,EAAD,CAAMZ,UAAU,OAAOL,MAAO,IAC9B,kBAACiB,EAAD,CAAMZ,UAAU,OAAOL,MAAO,IAC9B,kBAACiB,EAAD,CAAMZ,UAAU,cAAcL,MAAO,MACrC,kBAACiB,EAAD,CAAMZ,UAAU,YAAYL,MAAO,IACnC,kBAACiB,EAAD,CAAMZ,UAAU,OAAOL,MAAO,MAC9B,kBAACI,EAAA,EAAD,CAAQC,UAAU,cAAcL,MAAO,OCvB1C,IASeuB,EATI,WAClB,OACC,oCACC,kBAACP,EAAD,MACA,kBAACM,EAAD,QCQYE,MAZf,WACC,OACC,kBAAC,IAAD,KACC,yBAAKnB,UAAU,UACd,yBAAKA,UAAU,cACd,kBAAC,EAAD,UCEeoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9f63c26e.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const Context = createContext();\r\n\r\nexport const Provider = (props) => {\r\n\tconst [equation, setEquation] = useState('');\r\n\tconst [answer, setAnswer] = useState(0);\r\n\r\n\treturn (\r\n\t\t<Context.Provider value={{ eqtn: [equation, setEquation], aswr: [answer, setAnswer] }}>\r\n\t\t\t{props.children}\r\n\t\t</Context.Provider>\r\n\t);\r\n};\r\n","import React, { useContext } from 'react';\r\nimport '../App.scss';\r\nimport { Context } from '../Context';\r\n\r\nexport default function Equals({ value, className }) {\r\n\tconst { eqtn, aswr } = useContext(Context);\r\n\tconst [equation, setEquation] = eqtn;\r\n\tconst [answer, setAnswer] = aswr;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonClick={() => {\r\n\t\t\t\tlet nString = equation\r\n\t\t\t\t\t.replace(/x/g, '*')\r\n\t\t\t\t\t.replace(/,/g, '.')\r\n\t\t\t\t\t.replace(/ /g, '')\r\n\t\t\t\t\t.replace(/%/g, '/100');\r\n\t\t\t\ttry {\r\n\t\t\t\t\tlet aws = eval(nString.trim()).toFixed(2);\r\n\t\t\t\t\tif (aws !== null) {\r\n\t\t\t\t\t\tsetAnswer(aws.split('.')[1] == 0 ? aws.split('.')[0] : aws);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetAnswer(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tsetAnswer(0);\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\tclassName={className}>\r\n\t\t\t<p>{value}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useContext } from 'react';\r\nimport '../App.scss';\r\nimport { Context } from '../Context';\r\n\r\nexport default function Display() {\r\n\tconst { eqtn, aswr } = useContext(Context);\r\n\tconst [equation, setEquation] = eqtn;\r\n\tconst [answer, setAnswer] = aswr;\r\n\r\n\treturn (\r\n\t\t<div className='display'>\r\n\t\t\t<div className='equation'>\r\n\t\t\t\t<p>{equation}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className='answer'>\r\n\t\t\t\t<p>{answer}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useContext } from 'react';\r\nimport '../App.scss';\r\nimport { Context } from '../Context';\r\n\r\nexport default function Item({ value, className, valueToJsx }) {\r\n\tconst { eqtn } = useContext(Context);\r\n\tconst [equation, setEquation] = eqtn;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonClick={() => {\r\n\t\t\t\tlet aws;\r\n\t\t\t\tif (valueToJsx) aws = equation + '**2';\r\n\t\t\t\telse if (isNaN(value) && value.toString() === ',') {\r\n\t\t\t\t\taws = equation + value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\taws = equation + value.toString() + ' ';\r\n\t\t\t\t}\r\n\t\t\t\tsetEquation(aws);\r\n\t\t\t}}\r\n\t\t\tclassName={className}>\r\n\t\t\t{!valueToJsx ? (\r\n\t\t\t\t<p> {value} </p>\r\n\t\t\t) : (\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tx<sup>2</sup>{' '}\r\n\t\t\t\t</p>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useContext } from 'react';\r\nimport Item from './Item';\r\nimport { Context } from '../Context';\r\n\r\nexport default function Clear({ value, className }) {\r\n\tconst { eqtn, aswr } = useContext(Context);\r\n\tconst [equation, setEquation] = eqtn;\r\n\tconst [answer, setAnswer] = aswr;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetEquation('');\r\n\t\t\t\tsetAnswer(0);\r\n\t\t\t}}\r\n\t\t\tclassName={className}>\r\n\t\t\t<p>{value}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport '../App.scss';\r\n\r\nimport Item from './Item';\r\nimport Equals from './Equals';\r\nimport Clear from './Clear';\r\n\r\nexport default function ButtonGroup() {\r\n\treturn (\r\n\t\t<div className='buttonGroup'>\r\n\t\t\t<Item className='item' value={'%'} />\r\n\t\t\t<Item className='item' value={'x'} valueToJsx={true} />\r\n\t\t\t<Clear className='item' value='C' />\r\n\t\t\t<Item className='item purple' value={'/'} />\r\n\t\t\t<Item className='item' value={7} />\r\n\t\t\t<Item className='item' value={8} />\r\n\t\t\t<Item className='item' value={9} />\r\n\t\t\t<Item className='item purple' value={'x'} />\r\n\t\t\t<Item className='item' value={4} />\r\n\t\t\t<Item className='item' value={5} />\r\n\t\t\t<Item className='item' value={6} />\r\n\t\t\t<Item className='item purple' value={'-'} />\r\n\t\t\t<Item className='item' value={1} />\r\n\t\t\t<Item className='item' value={2} />\r\n\t\t\t<Item className='item' value={3} />\r\n\t\t\t<Item className='item purple' value={'+'} />\r\n\t\t\t<Item className='item zero' value={0} />\r\n\t\t\t<Item className='item' value={','} />\r\n\t\t\t<Equals className='item equals' value={'='} />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport '../App.scss';\r\nimport Display from '../components/Display';\r\nimport ButtonGroup from './ButtonGroup';\r\n\r\nconst Calculator = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Display />\r\n\t\t\t<ButtonGroup />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Calculator;\r\n","import React, { useState, useContext } from 'react';\nimport './App.scss';\nimport { Provider } from './Context';\nimport Calculator from './components/Calculator';\n\nfunction App() {\n\treturn (\n\t\t<Provider>\n\t\t\t<div className='parent'>\n\t\t\t\t<div className='background'>\n\t\t\t\t\t<Calculator />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}